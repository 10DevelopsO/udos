/*
 * Copyright 2019 Haiku, Inc. All rights reserved.
 * Distributed under the terms of the MIT License.
 *
 * Authors:
 *		Name, email@email.com
 *
 * Corresponds to:
 *		headers/os/support/Url.h	 hrev52332
 *		src/kits/support/Url.cpp	 hrev52332
 */


/*!
	\file Url.h
	\ingroup support
	\brief Undocumented file.

	\since Haiku R1
*/


/*!
	\class BUrl
	\ingroup support
	\ingroup libbe
	\brief Undocumented class.

	\since Haiku R1
*/


/*!
	\fn BUrl::BUrl(const char *url)
	\brief Undocumented public method

	\param url Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BUrl::BUrl(BMessage *archive)
	\brief Undocumented public method

	\param archive Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BUrl::BUrl(const BUrl &other)
	\brief Undocumented public method

	\param other Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BUrl::BUrl(const BUrl &base, const BString &relative)
	\brief Undocumented public method

	\param base Undocumented
	\param relative Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BUrl::BUrl(const BPath &path)
	\brief Undocumented public method

	\param path Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BUrl::BUrl()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual virtual BUrl::~BUrl()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BUrl& BUrl::SetUrlString(const BString &url)
	\brief Undocumented public method

	\param url Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BUrl& BUrl::SetProtocol(const BString &scheme)
	\brief Undocumented public method

	\param scheme Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BUrl& BUrl::SetUserName(const BString &user)
	\brief Undocumented public method

	\param user Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BUrl& BUrl::SetPassword(const BString &password)
	\brief Undocumented public method

	\param password Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn void BUrl::SetAuthority(const BString &authority)
	\brief Undocumented public method

	\param authority Undocumented

	\since Haiku R1
*/


/*!
	\fn BUrl& BUrl::SetHost(const BString &host)
	\brief Undocumented public method

	\param host Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BUrl& BUrl::SetPort(int port)
	\brief Undocumented public method

	\param port Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BUrl& BUrl::SetPath(const BString &path)
	\brief Undocumented public method

	\param path Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BUrl& BUrl::SetRequest(const BString &request)
	\brief Undocumented public method

	\param request Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BUrl& BUrl::SetFragment(const BString &fragment)
	\brief Undocumented public method

	\param fragment Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn const BString& BUrl::UrlString() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn const BString& BUrl::Protocol() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn const BString& BUrl::UserName() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn const BString& BUrl::Password() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn const BString& BUrl::UserInfo() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn const BString& BUrl::Host() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn int BUrl::Port() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn const BString& BUrl::Authority() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn const BString& BUrl::Path() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn const BString& BUrl::Request() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn const BString& BUrl::Fragment() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn bool BUrl::IsValid() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn bool BUrl::HasProtocol() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn bool BUrl::HasUserName() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn bool BUrl::HasPassword() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn bool BUrl::HasUserInfo() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn bool BUrl::HasHost() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn bool BUrl::HasPort() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn bool BUrl::HasAuthority() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn bool BUrl::HasPath() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn bool BUrl::HasRequest() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn bool BUrl::HasFragment() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn void BUrl::UrlEncode(bool strict=false)
	\brief Undocumented public method

	\param strict Undocumented

	\since Haiku R1
*/


/*!
	\fn void BUrl::UrlDecode(bool strict=false)
	\brief Undocumented public method

	\param strict Undocumented

	\since Haiku R1
*/


/*!
	\fn status_t BUrl::IDNAToAscii()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn status_t BUrl::IDNAToUnicode()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn bool BUrl::HasPreferredApplication() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BString BUrl::PreferredApplication() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn status_t BUrl::OpenWithPreferredApplication(bool onProblemAskUser=true) const
	\brief Undocumented public method

	\param onProblemAskUser Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn bool BUrl::operator==(BUrl &other) const
	\brief Undocumented public method

	\param other Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn bool BUrl::operator!=(BUrl &other) const
	\brief Undocumented public method

	\param other Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn const BUrl& BUrl::operator=(const BUrl &other)
	\brief Undocumented public method

	\param other Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn const BUrl& BUrl::operator=(const BString &string)
	\brief Undocumented public method

	\param string Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn const BUrl& BUrl::operator=(const char *string)
	\brief Undocumented public method

	\param string Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BUrl::operator const char *() const
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn static static BString BUrl::UrlEncode(const BString &url, bool strict=false, bool directory=false)
	\brief Undocumented public method

	\param url Undocumented
	\param strict Undocumented
	\param directory Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn static static BString BUrl::UrlDecode(const BString &url, bool strict=false)
	\brief Undocumented public method

	\param url Undocumented
	\param strict Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn static static BArchivable* BUrl::Instantiate(BMessage *archive)
	\brief Undocumented public method

	\param archive Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/
